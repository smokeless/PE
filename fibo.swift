

import Cocoa

/* Even Fibonacci numbers */

/* Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. */

//1 + 2 = 3
//2 + 3 = 5
// prevTerm + shiftTerm = movingTerm
//    1     +      2    =    3
// prevTerm = shiftTerm
// results in prevTerm = 2
// shiftTerm = movingTerm
// results in shiftTerm = 3

var prevTerm = 1
var shiftTerm = 1
var movingTerm = 0
var addition = 0
print( "initialising addition at \(addition)")
while shiftTerm < 4000000{
    if( shiftTerm % 2 == 0 ){
        addition = addition + shiftTerm
        print( "\(shiftTerm) is even, adding it, total is \(addition)" )
    }
    movingTerm = prevTerm + shiftTerm
    prevTerm = shiftTerm
    shiftTerm = movingTerm
    print( prevTerm )
}
print( "The answer is \(addition)." )
//Spent way too much time on this because had a place holder incremental counter messing
//up my loop in a subtle way.
